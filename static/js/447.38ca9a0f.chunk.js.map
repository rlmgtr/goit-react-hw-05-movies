{"version":3,"file":"static/js/447.38ca9a0f.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/pages/Movie/MovieDetailsPage.module.css?c0ad","pages/Movie/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd4080a548e68125af2336394b5585231';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  console.log('response from api', response);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n\n// Generic function to fetch data from the TMDb API\n// const fetchData = async (path, params = '') => {\n//   const response = await axios.get(`${path}${params}`);\n//   return response.data.results || response.data;\n// };\n\n// export const fetchTrendingMovies = () => fetchData('trending/movie/day');\n\n// export const fetchMovieByQuery = movieName => fetchData('search/movie', `?query=${movieName}`);\n\n// export const fetchMovieDetails = movieId => fetchData(`movie/${movieId}`);\n\n// export const fetchMovieCast = movieId => fetchData(`movie/${movieId}/credits`).then(data => data.cast);\n\n// export const fetchMovieReviews = movieId => fetchData(`movie/${movieId}/reviews`);\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetailsPage_movieDetailsContainer__3WwRr\",\"image\":\"MovieDetailsPage_image__qPA9k\",\"movieDetailsWrap\":\"MovieDetailsPage_movieDetailsWrap__TH-K6\",\"goBackButton\":\"MovieDetailsPage_goBackButton__mVPnh\",\"goBackLink\":\"MovieDetailsPage_goBackLink__lejaw\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { fetchMovieDetails } from 'api/api';\nimport { useLocation, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Link to={backLink} className={css.goBackLink}>\n        <button className={css.goBackButton}>â¬… Go back</button>\n      </Link>\n      <div className={css.movieDetailsContainer}>\n        <img\n          className={css.image}\n          src={\n            movieDetails.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n              : `https://fakeimg.pl/600x400?text=No+Image+Available`\n          }\n          alt={movieDetails.title}\n        />\n        <div className={css.movieDetailsWrap}>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {Math.round(movieDetails.vote_average * 10)}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n\n      <hr />\n      <h3>Additional information</h3>\n      <div className={css.movieNav} >\n      <Link to=\"cast\" className={css.link}>\n        <button className={css.infoButton}>Cast</button>\n      </Link>\n      <Link to=\"reviews\" className={css.link}>\n        <button className={css.infoButton}>Reviews</button>\n      </Link>\n      </div>\n      <hr />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","console","log","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","backLink","useLocation","state","from","useEffect","fetchDetails","movie","t0","error","_jsxs","_Fragment","children","_jsx","Link","to","className","css","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}